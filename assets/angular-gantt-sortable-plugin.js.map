{"version":3,"sources":["../src/plugins/sortable.js"],"names":[],"mappings":"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","file":"angular-gantt-sortable-plugin.js","sourcesContent":["(function(){\n    'use strict';\n    angular.module('gantt.sortable', ['gantt', 'ang-drag-drop']).directive('ganttSortable', ['ganttUtils', '$compile', function(utils, $compile) {\n        // Provides the row sort functionality to any Gantt row\n        // Uses the sortableState to share the current row\n\n        return {\n            restrict: 'E',\n            require: '^gantt',\n            scope: {\n                enabled: '=?'\n            },\n            link: function(scope, element, attrs, ganttCtrl) {\n                var api = ganttCtrl.gantt.api;\n\n                // Load options from global options attribute.\n                if (scope.options && typeof(scope.options.sortable) === 'object') {\n                    for (var option in scope.options.sortable) {\n                        scope[option] = scope.options[option];\n                    }\n                }\n\n                if (scope.enabled === undefined) {\n                    scope.enabled = true;\n                }\n\n                api.directives.on.new(scope, function(directiveName, rowScope, rowElement) {\n                    if (directiveName === 'ganttRowLabel') {\n                        rowScope.checkDraggable = function() {\n                            return utils.firstProperty([rowScope.row.model.sortable], 'enabled', scope.enabled);\n                        };\n\n                        rowScope.onDropSuccess = function() {\n                            rowScope.$evalAsync();\n                        };\n\n                        rowScope.onDrop = function(evt, data) {\n                            var row = rowScope.row.rowsManager.rowsMap[data.id];\n                            if (row !== rowScope) {\n                                rowScope.row.rowsManager.moveRow(row, rowScope.row);\n                                rowScope.$evalAsync();\n                            }\n                        };\n\n                        rowElement.attr('ui-draggable', '{{checkDraggable()}}');\n                        rowElement.attr('drag-channel', '\\'sortable\\'');\n                        rowElement.attr('ui-on-drop', 'onDrop($event, $data)');\n                        rowElement.attr('on-drop-success', 'onDropSuccess()');\n\n                        rowElement.attr('drop-channel', '\\'sortable\\'');\n                        rowElement.attr('drag', 'row.model');\n\n                        $compile(rowElement)(rowScope);\n                    }\n                });\n\n            }\n        };\n    }]);\n}());\n\n"]}